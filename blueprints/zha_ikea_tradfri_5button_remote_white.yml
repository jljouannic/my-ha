blueprint:
  source_url: https://raw.githubusercontent.com/niro1987/homeassistant-config/main/blueprints/automation/niro1987/zha_ikea_tradfri_5button_remote_white.yaml
  name: ZHA - IKEA TRADFRI - 5 Button Remote - Warm White Lights
  description:
    This automation simulates the use of the IKEA TRADFRI remote control
    connected through ZHA.
  domain: automation
  input:
    remote:
      name: IKEA TRADFRI remote control
      description: Select the remote control you wish to use.
      selector:
        device:
          filter:
            - integration: zha
              manufacturer: IKEA of Sweden
              model: TRADFRI remote control
          multiple: false
    light:
      name: Light
      description: Select the light entity you wish to control.
      selector:
        entity:
          filter:
            - domain:
                - light
          multiple: false
    speed:
      name: Speed
      description: The speed in which to update the light when the button is held.
      selector:
        number:
          min: 100.0
          max: 1000.0
          step: 100.0
          unit_of_measurement: milliseconds
          mode: slider
      default: 500
mode: restart
max_exceeded: silent
variables:
  var_light: !input light
  var_speed: !input speed
trigger:
  - platform: event
    event_type: zha_event
    event_data:
      device_id: !input remote
action:
  - choose:
      - conditions:
          - condition: template
            value_template: '{{ trigger.event.data.command == "toggle" }}'
        sequence:
          - service: light.toggle
            target:
              entity_id: !input light
      - conditions:
          - condition: template
            value_template: '{{ trigger.event.data.command == "move_to_level_with_on_off" }}'
        sequence:
          - service: light.turn_on
            target:
              entity_id: !input light
            data:
              brightness: 254
              color_temp: 400
      - conditions:
          - condition: template
            value_template: '{{ trigger.event.data.command == "step_with_on_off" }}'
        sequence:
          - service: light.turn_on
            target:
              entity_id: !input light
            data:
              brightness_step_pct: 20
              transition: "{{ (var_speed / 1000) | float }}"
      - conditions:
          - condition: template
            value_template: '{{ trigger.event.data.command == "move_with_on_off" }}'
        sequence:
          - repeat:
              while: []
              sequence:
                - service: light.turn_on
                  target:
                    entity_id: !input light
                  data:
                    brightness_step_pct: 10
                    transition: "{{ (var_speed / 1000) | float }}"
                - delay:
                    milliseconds: !input speed
      - conditions:
          - condition: template
            value_template: '{{ trigger.event.data.command == "step" }}'
        sequence:
          - service: light.turn_on
            target:
              entity_id: !input light
            data:
              brightness_step_pct: -20
              transition: "{{ (var_speed / 1000) | float }}"
      - conditions:
          - condition: template
            value_template: '{{ trigger.event.data.command == "move" }}'
        sequence:
          - repeat:
              while: []
              sequence:
                - service: light.turn_on
                  target:
                    entity_id: !input light
                  data:
                    brightness_step_pct: -10
                    transition: "{{ (var_speed / 1000) | float }}"
                - delay:
                    milliseconds: !input speed
      - conditions:
          - condition: template
            value_template: '{{ trigger.event.data.command == "press" }}'
          - condition: template
            value_template: "{{ trigger.event.data.args == [256,13,0] }}"
        sequence:
          - service: light.turn_on
            target:
              entity_id: !input light
            data:
              color_temp: >-
                {% if state_attr(var_light, "color_temp") - 18 < 153 %}
                {{ 153 }}
                {% else %}
                {{ state_attr(var_light, "color_temp") - 18 }}
                {% endif %}
              transition: "{{ (var_speed / 1000) | float }}"
      - conditions:
          - condition: template
            value_template: '{{ trigger.event.data.command == "hold" }}'
          - condition: template
            value_template: "{{ trigger.event.data.args == [3328,0] }}"
        sequence:
          - repeat:
              while: []
              sequence:
                - service: light.turn_on
                  target:
                    entity_id: !input light
                  data:
                    color_temp: >-
                      {% if state_attr(var_light, "color_temp") - 18 < 153 %}
                      {{ 153 }}
                      {% else %}
                      {{ state_attr(var_light, "color_temp") - 18 }}
                      {% endif %}
                    transition: "{{ (var_speed / 1000) | float }}"
                - delay:
                    milliseconds: !input speed
      - conditions:
          - condition: template
            value_template: '{{ trigger.event.data.command == "press" }}'
          - condition: template
            value_template: "{{ trigger.event.data.args == [257,13,0] }}"
        sequence:
          - service: light.turn_on
            target:
              entity_id: !input light
            data:
              color_temp: >-
                {% if state_attr(var_light, "color_temp") + 18 > 500 %}
                {{ 500 }}
                {% else %}
                {{ state_attr(var_light, "color_temp") + 18 }}
                {% endif %}"
              transition: "{{ (var_speed / 1000) | float }}"
      - conditions:
          - condition: template
            value_template: '{{ trigger.event.data.command == "hold" }}'
          - condition: template
            value_template: "{{ trigger.event.data.args == [3329,0] }}"
        sequence:
          - repeat:
              while: []
              sequence:
                - service: light.turn_on
                  target:
                    entity_id: !input light
                  data:
                    color_temp: >-
                      {% if state_attr(var_light, "color_temp") + 18 > 500 %}
                      {{ 500 }}
                      {% else %}
                      {{ state_attr(var_light, "color_temp") + 18 }}
                      {% endif %}
                    transition: "{{ (var_speed / 1000) | float }}"
                - delay:
                    milliseconds: !input speed
    default: []
