---
# forked from https://github.com/niro1987/homeassistant-config/blob/main/blueprints/automation/niro1987/zha_ikea_tradfri_5button_remote_white.yaml

# This automation simulates the use of the IKEA TRADFRI Remote control
# connected through ZHA.

# | Button   | Action               |
# | -------- | -------------------- |
# | Power    | Toggle the light     |
# | Dim-Up   | Increase brightness  |
# | Dim-Down | Decrease brightness  |
# | Right    | Increase temperature |
# | Left     | Decrease temperature |
blueprint:
  source_url: https://github.com/jljouannic/my-ha/blob/main/blueprints/zha_ikea_tradfri_5button_remote_white.yml

  name: ZHA - IKEA TRADFRI - 5 Button Remote - Warm White Lights

  description: >-
    This automation simulates the use of the IKEA TRADFRI remote control
    connected through ZHA.

  domain: automation

  input:
    remote:
      name: IKEA TRADFRI remote control
      description: Select the remote control you wish to use.
      selector:
        device:
          filter:
            integration: zha
            manufacturer: IKEA of Sweden
            model: TRADFRI remote control
          multiple: false
    light:
      name: Light
      description: Select the light entity you wish to control.
      selector:
        entity:
          filter:
            domain:
              - light
          multiple: false
    speed:
      name: Speed
      description: The speed in which to update the light when the button is held.
      selector:
        number:
          min: 100.0
          max: 1000.0
          step: 100.0
          unit_of_measurement: milliseconds
          mode: slider
      default: 500

mode: restart
max_exceeded: silent

variables:
  var_light: !input light
  var_speed: !input speed

trigger:
  - platform: event
    event_type: zha_event
    event_data:
      device_id: !input remote

action:
  - variables:
      command: "{{ trigger.event.data.command }}"
      args: "{{ trigger.event.data.args }}"

  - choose:
      # Short-Press on the power button.
      - conditions: "{{ command == 'toggle' }}"
        sequence:
          - action: light.toggle
            target:
              entity_id: !input light

      # Long-Press on the power button.
      - conditions: "{{ command == 'move_to_level_with_on_off' }}"
        sequence:
          - action: light.turn_on
            target:
              entity_id: !input light
            data:
              brightness: 254
              color_temp: 400

      # Short-Press on the dim-up button.
      - conditions: "{{ command == 'step_with_on_off' }}"
        sequence:
          - action: light.turn_on
            target:
              entity_id: !input light
            data:
              brightness_step_pct: 20
              transition: "{{ (var_speed / 1000) | float }}"

      # Long-Press on the dim-up button.
      - conditions: "{{ command == 'move_with_on_off' }}"
        sequence:
          - repeat:
              while: []
              sequence:
                - action: light.turn_on
                  target:
                    entity_id: !input light
                  data:
                    brightness_step_pct: 10
                    transition: "{{ (var_speed / 1000) | float }}"
                - delay:
                    milliseconds: !input speed

      # Short-Press on the dim-down button.
      - conditions: "{{ command == 'step' }}"
        sequence:
          - action: light.turn_on
            target:
              entity_id: !input light
            data:
              brightness_step_pct: -20
              transition: "{{ (var_speed / 1000) | float }}"

      # Long-Press on the dim-down button.
      - conditions: "{{ command == 'move' }}"
        sequence:
          - repeat:
              while: []
              sequence:
                - action: light.turn_on
                  target:
                    entity_id: !input light
                  data:
                    brightness_step_pct: -10
                    transition: "{{ (var_speed / 1000) | float }}"
                - delay:
                    milliseconds: !input speed

      # Short-Press on the color-up button.
      - conditions:
          - "{{ command == 'press' }}"
          - "{{ args == [256, 13, 0] }}"
        sequence:
          - action: light.turn_on
            target:
              entity_id: !input light
            data:
              color_temp: >-
                {% if state_attr(var_light, "color_temp") - 18 < 153 %}
                {{ 153 }}
                {% else %}
                {{ state_attr(var_light, "color_temp") - 18 }}
                {% endif %}
              transition: "{{ (var_speed / 1000) | float }}"

      # Long-Press on the color-up button.
      - conditions:
          - "{{ command == 'hold' }}"
          - "{{ args == [3328, 0] }}"
        sequence:
          - repeat:
              while: []
              sequence:
                - action: light.turn_on
                  target:
                    entity_id: !input light
                  data:
                    color_temp: >-
                      {% if state_attr(var_light, "color_temp") - 18 < 153 %}
                      {{ 153 }}
                      {% else %}
                      {{ state_attr(var_light, "color_temp") - 18 }}
                      {% endif %}
                    transition: "{{ (var_speed / 1000) | float }}"
                - delay:
                    milliseconds: !input speed

      # Short-Press on the color-down button.
      - conditions:
          - "{{ command == 'press' }}"
          - "{{ args == [257, 13, 0] }}"
        sequence:
          - action: light.turn_on
            target:
              entity_id: !input light
            data:
              color_temp: >-
                {% if state_attr(var_light, "color_temp") + 18 > 500 %}
                {{ 500 }}
                {% else %}
                {{ state_attr(var_light, "color_temp") + 18 }}
                {% endif %}"
              transition: "{{ (var_speed / 1000) | float }}"

      # Long-Press on the color-down button.
      - conditions:
          - "{{ command == 'hold' }}"
          - "{{ args == [3329, 0] }}"
        sequence:
          - repeat:
              while: []
              sequence:
                - action: light.turn_on
                  target:
                    entity_id: !input light
                  data:
                    color_temp: >-
                      {% if state_attr(var_light, "color_temp") + 18 > 500 %}
                      {{ 500 }}
                      {% else %}
                      {{ state_attr(var_light, "color_temp") + 18 }}
                      {% endif %}
                    transition: "{{ (var_speed / 1000) | float }}"
                - delay:
                    milliseconds: !input speed

    # Any other event will cancel the repeat loops.
    default: []
